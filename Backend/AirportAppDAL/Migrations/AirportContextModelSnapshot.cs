// <auto-generated />
using System;
using AirportAppDAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirportAppDAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AirportAppCommon.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ControlTowers");
                });

            modelBuilder.Entity("AirportAppCommon.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AirportAppCommon.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("AirportAppCommon.Models.StationLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FromId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ToId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("StationLogs");
                });

            modelBuilder.Entity("AirportAppCommon.Models.StationToStationRelation", b =>
                {
                    b.Property<Guid>("FromId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("FromId", "ToId", "Direction");

                    b.HasIndex("ToId");

                    b.ToTable("StationRelations");
                });

            modelBuilder.Entity("AirportAppCommon.Models.TowerToStationRelation", b =>
                {
                    b.Property<Guid>("FromId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("FromId", "ToId", "Direction");

                    b.HasIndex("ToId");

                    b.ToTable("TowerRelations");
                });

            modelBuilder.Entity("AirportAppCommon.Models.Flight", b =>
                {
                    b.HasOne("AirportAppCommon.Models.ControlTower", "ControlTower")
                        .WithMany()
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("AirportAppCommon.Models.Station", b =>
                {
                    b.HasOne("AirportAppCommon.Models.ControlTower", "ControlTower")
                        .WithMany()
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("AirportAppCommon.Models.StationLog", b =>
                {
                    b.HasOne("AirportAppCommon.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirportAppCommon.Models.Station", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("AirportAppCommon.Models.Station", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("Flight");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("AirportAppCommon.Models.StationToStationRelation", b =>
                {
                    b.HasOne("AirportAppCommon.Models.Station", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirportAppCommon.Models.Station", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("AirportAppCommon.Models.TowerToStationRelation", b =>
                {
                    b.HasOne("AirportAppCommon.Models.ControlTower", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirportAppCommon.Models.Station", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("To");
                });
#pragma warning restore 612, 618
        }
    }
}
